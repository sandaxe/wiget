.mainContainer {
  font-family: "Proxima-Regular";
}
.onFormContainer {
  width: 328px;
  margin: 50px auto 0px;
}
.largeFormContainer {
  width: 75%;
}

.onFormContainer .onFormGroup {
  position: relative;
  margin-top: 60px;
}

.editInput {
  display: grid;
  grid-template-columns: 1fr auto;
  grid-gap: 0.5rem;
}

.fieldLabel {
  font-size: 12px;
  letter-spacing: 0.3px;
  color: #333333;
  margin-bottom: 3px;
}
.onFormContainer .errorMessage {
  position: absolute;
  font-size: 12px;
  line-height: 14px;
  color: #d03a3a;
  font-family: Proxima-Thin;
  left: 0px;
  bottom: -16px;
}
.onFormContainer .error input {
  color: #d03a3a;
  border-color: #d03a3a !important;
}
.onFormGroup .errIcon {
  position: absolute;
  bottom: 4px;
  right: 83px;
}
.passwordField .errIcon {
  right: 93px !important;
}
.onFormContainer .onFormGroup input[type="password"],
.onFormContainer .onFormGroup input[type="text"] {
  border: none;
  width: 100%;
  border-bottom: 1px solid #4a90e2;
  background: transparent;
  padding: 0px 0px 6px 0px;
  font-size: 16px;
}
.onFormContainer .onFormGroup input[type="text"] {
  height: 30px;
  padding: 5px;
  box-sizing: border-box;
}
.onFormContainer .onFormGroup input[type="text"].whiteBg {
  background-color: #ffffff;
}
.onFormContainer .onFormGroup input[type="text"]:disabled {
  background: #f0f0f0;
}
.onFormContainer .onFormGroup input[type="checkbox"] {
  border-radius: 10px;
  margin: 0px 8px 0px 0px;
}
.onFormGroup .small {
  font-size: 15px;
  color: #999596;
}
.onFormGroup .formControlPlaceholder {
  position: absolute;
  top: -30px;
  padding: 7px 0 0 0px;
  transition: all 200ms;
  opacity: 0.8;
  left: 0px;
}
.onFormContainer button {
  cursor: pointer;
  padding: 8px 12px;
  border-radius: 5px;
  border: none;
  color: #ffffff;
  font-size: 18px;
  display: block;
  margin: 36px auto 0px;
  /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#60e0b2+0,1dcc8c+100 */
  background: #60e0b2; /* Old browsers */
  background: -moz-linear-gradient(
    left,
    #60e0b2 0%,
    #1dcc8c 100%
  ); /* FF3.6-15 */
  background: -webkit-linear-gradient(
    left,
    #60e0b2 0%,
    #1dcc8c 100%
  ); /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(
    to right,
    #60e0b2 0%,
    #1dcc8c 100%
  ); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#60e0b2', endColorstr='#1dcc8c',GradientType=1 ); /* IE6-9 */
}
button.disabledBtn {
  color: #5decb8 !important;
  cursor: no-drop;
}
.greenBorderedBtn {
  margin-top: 40px;
  margin-bottom: 30px;
}
.greenBorderedBtn a {
  display: inline-block;
  background-color: #ffffff;
  border: 1px solid #28cf92;
  border-radius: 4px;
  color: #333333;
  padding: 10px 20px;
  text-decoration: none;
  font-size: 16px;
  margin: 6px 8px 6px 0px;
}

.onFormGroup .formControl:focus + .formControlPlaceholder,
.onFormGroup .formControl:valid + .formControlPlaceholder {
  font-size: 12px;
  -webkit-transform: translate3d(0, -80%, 0);
  transform: translate3d(0, -80%, 0);
  opacity: 1;
}
.onFormGroup span.resend {
  position: absolute;
  right: 0px;
  font-size: 14px;
  letter-spacing: 0.3px;
  color: #666666;
  bottom: 6.4px;
  cursor: pointer;
}
.onFormGroup .formControlPlaceholderStatic {
  font-size: 12px;
  position: absolute;
  bottom: 33px;
  opacity: 1;
}
.onFormGroup ::placeholder {
  /* Chrome, Firefox, Opera, Safari 10.1+ */
  color: #bebebe;
  font-size: 14px;
  opacity: 1; /* Firefox */
}

.onFormGroup :-ms-input-placeholder {
  /* Internet Explorer 10-11 */
  color: #bebebe;
  font-size: 14px;
}

.onFormGroup ::-ms-input-placeholder {
  /* Microsoft Edge */
  color: #bebebe;
  font-size: 14px;
}

.formControlPlaceholderStatic {
  border: 1px solid #3079ed;
  border-radius: 3px;
}
.formControlPlaceholderStatic .password {
  padding: 5px 10px 3px;
  text-decoration: none;
  color: #3079ed;
  cursor: pointer;
}
.formControlPlaceholderStatic .password:first-child {
}
.formControlPlaceholderStatic .password.active {
  background-color: #3079ed;
  color: #ffffff;
}

.onFormGroup .icons {
  position: absolute;
  right: 15px;
  bottom: 4px;
  opacity: 0.3;
  cursor: pointer;
}
.passwordVisible {
  position: absolute;
  right: 15px;
  bottom: 4px;
  opacity: 0.9;
  cursor: pointer;
}
.onFormGroup .reload {
  position: absolute;
  right: 10px;
  bottom: 4px;
  opacity: 0.8;
}
.onFormGroup .resendOtp {
  position: absolute;
  right: 0px;
  bottom: 6px;
}
.onFormGroup .resendOtp .resend {
  font-size: 13px;
  color: #000000;
}
.onFormGroup ul.bullets {
  margin: 0px;
  padding: 0px;
  position: absolute;
  right: 0px;
  bottom: 3px;
  list-style-type: none;
}
.onFormGroup ul.bullets li {
  height: 3px;
  width: 3px;
  border-radius: 2px;
  background-color: #ffffff;
  margin: 3px 0px;
}
.onFormGroup ul.bullets li:nth-child(1) {
  background-color: #e0e0e0;
}
.onFormGroup ul.bullets li:nth-child(2) {
  background-color: #e0e0e0;
}
.onFormGroup ul.bullets li:nth-child(3) {
  background-color: #f9c466;
}
.onFormGroup ul.bullets li:nth-child(4) {
  background-color: #cd4146;
}

.wrong {
  color: #cd4146;
}

/* Custom Checkbox */
.customCheck {
  display: block;
  position: relative;
  padding-left: 30px;
  cursor: pointer;
  font-size: 15px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #b5b0b1;
  padding-top: 4px;
}

/* Hide the browser's default checkbox */
.customCheck input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: transparent;
  border-radius: 50%;
  border: 2px solid #e3e1e1;
}

/* On mouse-over, add a grey background color */
.customCheck:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.customCheck input:checked ~ .checkmark {
  background-color: #1dcc8c;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.customCheck input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.customCheck .checkmark:after {
  left: 5px;
  top: 2px;
  width: 5px;
  height: 9px;
  border: solid white;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

@media (max-width: 567px) and (min-width: 280px) {
  .onFormContainer .onFormGroup {
    position: relative;
    margin-top: 45px;
  }
}


@media (max-width: 990px) and (min-width: 568px) {
  .flex-sm-col {
    display: grid;
  }
  .onb-bg{
    display: none;
  }
}